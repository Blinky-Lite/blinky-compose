{"app":"app20","title":"Blinky-Thermo-Cam","allowedRoles":["appView","app01"],"trayTypes":["blinky-thermo-cam"],"trayUpdateFilter":[{"type":"blinky-thermo-cam"}],"navbar":{"config":{"imageHeight":"75px","centerImage":"/img/thermo.png"}},"cards":[{"type":"CustomCard","config":{"title":"Spectrogram","displayOnOpen":true,"domSetup":"","classMethods":""}},{"type":"ArchivePlotCard","config":{"title":"History","displayOnOpen":true,"buttonNumbers":[2,4,8,24,72,168],"timeUnit":"hour","initButtonIndex":3,"cubeList":[[{"name":"pixelMin","color":"blue","yaxis":"y1","label":"Min Temp","mode":"markers"},{"name":"pixelMax","color":"red","yaxis":"y1","label":"Max Temp","mode":"markers"}]],"plotlyDisplay":{"displayModeBar":true,"staticPlot":false},"plotlyLayout":{"showlegend":false,"legend":{"x":0,"y":1.15,"font":{"size":20}},"height":"600","width":"","xaxis":{"type":"date","tickangle":"90","tickfont":{"size":30},"tickformat":"%H:%M\\n%b-%d","fixedrange":true},"yaxis":{"title":"Temperature (C)","titlefont":{"color":"#557a95","size":30},"tickfont":{"color":"#557a95","size":30},"gridcolor":"#beceda","zerolinecolor":"#beceda","linecolor":"#beceda"},"yaxis2":{"title":"Relay State","titlefont":{"color":"#557a95","size":30},"tickfont":{"color":"#557a95","size":30},"gridcolor":"#beceda","zerolinecolor":"#beceda","linecolor":"#beceda","overlaying":"y","side":"right","rangemode":"tozero","fixedrange":true},"margin":{"t":30,"l":150,"r":100,"b":130}}}},{"type":"CubeRowCard","config":{"title":"Settings","displayOnOpen":false,"cubeRows":[{"type":"NumberReadCube","config":{"trayIndex":0,"cubeName":"pixelMin","cubeLabel":"Pixel Min. Temp.","round":2}},{"type":"NumberReadCube","config":{"trayIndex":0,"cubeName":"pixelMax","cubeLabel":"Pixel Max. Temp.","round":2}},{"type":"TextSetCube","config":{"trayIndex":0,"cubeName":"alias","cubeLabel":"Alias"}},{"type":"OnOffSetCube","config":{"trayIndex":0,"cubeName":"flipHorizontal","cubeLabel":"Flip Horizontal","onColor":"red","offColor":"green"}},{"type":"OnOffSetCube","config":{"trayIndex":0,"cubeName":"flipVertical","onColor":"red","offColor":"green","cubeLabel":"Flip Vertical"}},{"type":"NumberSetCube","config":{"trayIndex":0,"cubeName":"imageDelay","cubeLabel":"Image delay"}},{"type":"DropChoiceCube","config":{"trayIndex":0,"cubeName":"transpose","cubeLabel":"Display mode","choices":[{"value":0,"color":"green","text":"Landscape"},{"value":1,"color":"red","text":"Portrait"}]}},{"type":"DropChoiceCube","config":{"trayIndex":0,"cubeName":"triggerMode","cubeLabel":"Trigger mode","choices":[{"value":0,"color":"green","text":"Manual"},{"value":1,"color":"red","text":"Periodic"}]}},{"type":"DropChoiceCube","config":{"trayIndex":0,"cubeName":"scaleMode","cubeLabel":"Scale mode","choices":[{"value":0,"color":"red","text":"Manual"},{"value":1,"color":"green","text":"Automatic"}]}},{"type":"DropChoiceCube","config":{"trayIndex":0,"cubeName":"resMode","cubeLabel":"Chip Resolution","choices":[{"value":1,"color":"green","text":"80x60"},{"value":2,"color":"red","text":"160x120"}]}},{"type":"DropChoiceCube","config":{"trayIndex":0,"cubeName":"reset","cubeLabel":"Reset","choices":[{"value":0,"color":"green","text":"Off"},{"value":1,"color":"red","text":"On"}]}}]}},{"type":"IframeCard","config":{"title":"Help","displayOnOpen":false,"url":"https://docs.google.com/presentation/d/e/2PACX-1vQ2wEPbyUk207PqBLWHNtoq9ik_yF-6m0XPQe_v58KyUUb9exbtFzebh534u5F9u7UMSj74eHolqqst/embed?start=true&loop=true&delayms=3000","extraAttr":{"frameborder":"0","width":"100%","height":"100%","allowfullscreen":"true","mozallowfullscreen":"true","webkitallowfullscreen":"true"},"height":"75vw"}},{"type":"UserCard","config":{"title":"User","displayOnOpen":false}}]}
